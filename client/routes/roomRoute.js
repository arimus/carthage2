// Generated by CoffeeScript 1.9.3
(function() {
  FlowRouter.route('/room/:_id', {
    name: 'room',
    action: function(params, queryParams) {
      Session.set('openedRoom', null);
      FlowLayout.render('main', {
        center: 'loading'
      });
      return Meteor.defer(function() {
        var track;
        return track = Tracker.autorun(function() {
          var child, i, len, mainNode, ref, room;
          if (RoomManager.open(params._id).ready() !== true) {
            return;
          }
          if (track != null) {
            track.stop();
          }
          if (!ChatRoom.find(params._id).count()) {
            FlowRouter.go('home');
          }
          mainNode = document.querySelector('.main-content');
          if (mainNode != null) {
            ref = mainNode.children;
            for (i = 0, len = ref.length; i < len; i++) {
              child = ref[i];
              if (child != null) {
                child.remove();
              }
            }
            room = RoomManager.getDomOfRoom(params._id);
            mainNode.appendChild(room);
            if (room.classList.contains('room-container')) {
              room.querySelector('.messages-box > .wrapper').scrollTop = room.oldScrollTop;
            }
          }
          Session.set('openedRoom', params._id);
          Session.set('editRoomTitle', false);
          if (Meteor.userId() != null) {
            Meteor.call('readMessages', params._id);
          }
          return setTimeout(function() {
            return $('.message-form .input-message').focus();
          }, 100);
        });
      });
    },
    triggersExit: [
      function() {
        var child, i, len, mainNode, ref, results;
        mainNode = document.querySelector('.main-content');
        if (mainNode != null) {
          ref = mainNode.children;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            child = ref[i];
            if (child != null) {
              if (child.classList.contains('room-container')) {
                child.oldScrollTop = child.querySelector('.messages-box > .wrapper').scrollTop;
              }
              results.push(child.remove());
            } else {
              results.push(void 0);
            }
          }
          return results;
        }
      }
    ]
  });

}).call(this);
