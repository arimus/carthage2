// Generated by CoffeeScript 1.9.3
(function() {
  Blaze.registerHelper('pathFor', function(path, kw) {
    return FlowRouter.path(path, kw.hash);
  });

  FlowLayout.setRoot('body');

  FlowRouter.subscriptions = function() {
    return Tracker.autorun((function(_this) {
      return function() {
        var ref;
        RoomManager.init();
        if (Meteor.userId() != null) {
          _this.register('userData', Meteor.subscribe('userData'));
          _this.register('activeUsers', Meteor.subscribe('activeUsers'));
          if ((ref = Meteor.user()) != null ? ref.admin : void 0) {
            return _this.register('admin-settings', Meteor.subscribe('admin-settings'));
          }
        }
      };
    })(this));
  };

  FlowRouter.route('/', {
    name: 'index',
    action: function() {
      return FlowRouter.go('home');
    }
  });

  FlowRouter.route('/login', {
    name: 'login',
    action: function() {
      return FlowRouter.go('home');
    }
  });

  FlowRouter.route('/home', {
    name: 'home',
    action: function() {
      FlowLayout.render('main', {
        center: 'home'
      });
      return KonchatNotification.getDesktopPermission();
    }
  });

  FlowRouter.route('/settings/:group?', {
    name: 'settings',
    action: function() {
      return FlowLayout.render('main', {
        center: 'settings'
      });
    }
  });

  FlowRouter.route('/history/private', {
    name: 'privateHistory',
    subscriptions: function(params, queryParams) {
      return this.register('privateHistory', Meteor.subscribe('privateHistory'));
    },
    action: function() {
      Session.setDefault('historyFilter', '');
      return FlowLayout.render('main', {
        center: 'privateHistory'
      });
    }
  });

}).call(this);
