// Generated by CoffeeScript 1.9.3
(function() {
  Template.loginServices.helpers({
    loginService: function() {
      var authServices, services;
      services = [];
      authServices = _.pluck(ServiceConfiguration.configurations.find({}, {
        service: 1
      }).fetch(), 'service');
      authServices.sort();
      authServices.forEach(function(service) {
        var icon, serviceName;
        switch (service) {
          case 'meteor-developer':
            serviceName = 'Meteor';
            icon = 'dot-circle-o';
            break;
          case 'github':
            serviceName = 'GitHub';
            icon = service;
            break;
          default:
            serviceName = _.capitalize(service);
            icon = service;
        }
        return services.push({
          service: service,
          displayName: serviceName,
          icon: icon
        });
      });
      return services;
    }
  });

  Template.loginServices.events({
    'click .external-login': function() {
      var loginWithService, serviceConfig;
      if (this.service == null) {
        return;
      }
      loginWithService = "loginWith" + (this.service === 'meteor-developer' ? 'MeteorDeveloperAccount' : _.capitalize(this.service));
      serviceConfig = {};
      return Meteor[loginWithService](serviceConfig, function(error) {
        if ((error != null ? error.error : void 0) === 'github-no-public-email') {
          alert(t("github_no_public_email"));
          return;
        }
        console.log(error);
        if (error) {
          toastr.error(error.message);
          return;
        }
        return FlowRouter.go('index');
      });
    }
  });

}).call(this);
