// Generated by CoffeeScript 1.9.3
(function() {
  Template.privateGroupsFlex.helpers({
    selectedUsers: function() {
      return Template.instance().selectedUsers.get();
    },
    name: function() {
      return Template.instance().selectedUserNames[this.valueOf()];
    },
    groupName: function() {
      return Template.instance().groupName.get();
    },
    error: function() {
      return Template.instance().error.get();
    },
    autocompleteSettings: function() {
      return {
        limit: 10,
        rules: [
          {
            collection: 'UserAndRoom',
            subscription: 'roomSearch',
            field: 'username',
            template: Template.userSearch,
            noMatchTemplate: Template.userSearchEmpty,
            matchAll: true,
            filter: {
              type: 'u',
              $and: [
                {
                  _id: {
                    $ne: Meteor.userId()
                  }
                }, {
                  username: {
                    $nin: Template.instance().selectedUsers.get()
                  }
                }
              ]
            },
            sort: 'username'
          }
        ]
      };
    }
  });

  Template.privateGroupsFlex.events({
    'autocompleteselect #pvt-group-members': function(event, instance, doc) {
      instance.selectedUsers.set(instance.selectedUsers.get().concat(doc.username));
      instance.selectedUserNames[doc.username] = doc.name;
      event.currentTarget.value = '';
      return event.currentTarget.focus();
    },
    'click .remove-room-member': function(e, instance) {
      var self, users;
      self = this;
      users = Template.instance().selectedUsers.get();
      users = _.reject(Template.instance().selectedUsers.get(), function(_id) {
        return _id === self.valueOf();
      });
      Template.instance().selectedUsers.set(users);
      return $('#pvt-group-members').focus();
    },
    'click .cancel-pvt-group': function(e, instance) {
      return SideNav.closeFlex(function() {
        return instance.clearForm();
      });
    },
    'click header': function(e, instance) {
      return SideNav.closeFlex(function() {
        return instance.clearForm();
      });
    },
    'mouseenter header': function() {
      return SideNav.overArrow();
    },
    'mouseleave header': function() {
      return SideNav.leaveArrow();
    },
    'keydown input[type="text"]': function(e, instance) {
      return Template.instance().error.set([]);
    },
    'click .save-pvt-group': function(e, instance) {
      var err;
      err = SideNav.validate();
      instance.groupName.set(instance.find('#pvt-group-name').value);
      if (!err) {
        return Meteor.call('createPrivateGroup', instance.find('#pvt-group-name').value, instance.selectedUsers.get(), function(err, result) {
          if (err) {
            if (err.error === 'name-invalid') {
              instance.error.set({
                invalid: true
              });
              return;
            }
            if (err.error === 'duplicate-name') {
              instance.error.set({
                duplicate: true
              });
              return;
            }
            return toastr.error(err.reason);
          }
          SideNav.closeFlex();
          instance.clearForm();
          return FlowRouter.go('room', {
            _id: result.rid
          });
        });
      } else {
        return Template.instance().error.set({
          fields: err
        });
      }
    }
  });

  Template.privateGroupsFlex.onCreated(function() {
    var instance;
    instance = this;
    instance.selectedUsers = new ReactiveVar([]);
    instance.selectedUserNames = {};
    instance.error = new ReactiveVar([]);
    instance.groupName = new ReactiveVar('');
    return instance.clearForm = function() {
      instance.error.set([]);
      instance.groupName.set('');
      instance.selectedUsers.set([]);
      instance.find('#pvt-group-name').value = '';
      return instance.find('#pvt-group-members').value = '';
    };
  });

}).call(this);
