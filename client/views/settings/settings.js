// Generated by CoffeeScript 1.9.3
(function() {
  Template.settings.helpers({
    isAdmin: function() {
      return Meteor.user().admin === true;
    },
    groups: function() {
      return Settings.find({
        type: 'group'
      }).fetch();
    },
    group: function() {
      var group, ref;
      group = FlowRouter.getParam('group');
      if (group == null) {
        group = (ref = Settings.findOne({
          type: 'group'
        })) != null ? ref._id : void 0;
      }
      return Settings.findOne({
        _id: group,
        type: 'group'
      });
    },
    settings: function() {
      var group, ref;
      group = FlowRouter.getParam('group');
      if (group == null) {
        group = (ref = Settings.findOne({
          type: 'group'
        })) != null ? ref._id : void 0;
      }
      return Settings.find({
        group: group
      }).fetch();
    },
    flexOpened: function() {
      if (Session.equals('flexOpened', true)) {
        return 'opened';
      }
    },
    arrowPosition: function() {
      if (window.rocketDebug) {
        console.log('room.helpers arrowPosition');
      }
      if (!Session.equals('flexOpened', true)) {
        return 'left';
      }
    },
    label: function() {
      return TAPi18next.t(this.i18nLabel);
    },
    description: function() {
      return TAPi18next.t(this.i18nDescription);
    }
  });

  Template.settings.events({
    "click .burger": function() {
      var chatContainer;
      chatContainer = $("#rocket-chat");
      if (chatContainer.hasClass("menu-closed")) {
        return chatContainer.removeClass("menu-closed").addClass("menu-opened");
      } else {
        return chatContainer.addClass("menu-closed").removeClass("menu-opened");
      }
    },
    "click .submit": function() {
      var group, i, len, setting, settings, updateSettings, value;
      group = FlowRouter.getParam('group');
      settings = Settings.find({
        group: group
      }).fetch();
      updateSettings = [];
      for (i = 0, len = settings.length; i < len; i++) {
        setting = settings[i];
        value = null;
        if (setting.type === 'string') {
          value = _.trim($("input[name=" + setting._id + "]").val());
        } else if (setting.type === 'boolean' && $("input[name=" + setting._id + "]:checked").length) {
          value = $("input[name=" + setting._id + "]:checked").val() === "1" ? true : false;
        }
        if (value != null) {
          updateSettings.push({
            _id: setting._id,
            value: value
          });
        }
      }
      if (!_.isEmpty(updateSettings)) {
        return RocketChat.settings.batchSet(updateSettings, function(err, success) {
          if (err) {
            return toastr.error(TAPi18next.t('Error_updating_settings'));
          }
          return toastr.success(TAPi18next.t('Settings_updated'));
        });
      }
    }
  });

}).call(this);
