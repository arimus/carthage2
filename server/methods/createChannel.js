// Generated by CoffeeScript 1.9.3
(function() {
  Meteor.methods({
    createChannel: function(name, members) {
      var i, len, member, now, rid, room, sub, user, username;
      if (!Meteor.userId()) {
        throw new Meteor.Error('invalid-user', "[methods] createChannel -> Invalid user");
      }
      if (!/^[0-9a-z-_]+$/i.test(name)) {
        throw new Meteor.Error('name-invalid');
      }
      console.log('[methods] createChannel -> '.green, 'userId:', Meteor.userId(), 'arguments:', arguments);
      now = new Date();
      user = Meteor.user();
      members.push(user.username);
      if (ChatRoom.findOne({
        name: name
      })) {
        throw new Meteor.Error('duplicate-name');
      }
      room = {
        usernames: members,
        ts: now,
        t: 'c',
        name: name,
        msgs: 0,
        u: {
          _id: Meteor.userId(),
          username: user.username
        }
      };
      RocketChat.callbacks.run('beforeCreateChannel', user, room);
      rid = ChatRoom.insert(room);
      for (i = 0, len = members.length; i < len; i++) {
        username = members[i];
        member = Meteor.users.findOne({
          username: username
        });
        if (member == null) {
          continue;
        }
        sub = {
          rid: rid,
          ts: now,
          name: name,
          t: 'c',
          unread: 0,
          u: {
            _id: member._id,
            username: username
          }
        };
        if (username === user.username) {
          sub.ls = now;
          sub.open = true;
        }
        ChatSubscription.insert(sub);
      }
      Meteor.defer(function() {
        return RocketChat.callbacks.run('afterCreateChannel', user, room);
      });
      return {
        rid: rid
      };
    }
  });

}).call(this);
