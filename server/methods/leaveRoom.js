// Generated by CoffeeScript 1.9.3
(function() {
  Meteor.methods({
    leaveRoom: function(rid) {
      var fromId, newOwner, removedUser, room, update, user;
      fromId = Meteor.userId();
      if (Meteor.userId() == null) {
        throw new Meteor.Error(300, 'Usuário não logado');
      }
      room = ChatRoom.findOne(rid);
      user = Meteor.user();
      RocketChat.callbacks.run('beforeLeaveRoom', user, room);
      update = {
        $pull: {
          usernames: user.username
        }
      };
      ChatSubscription.update({
        rid: rid
      }, {
        $set: {
          name: room.name
        }
      }, {
        multi: true
      });
      if (room.t !== 'c' && room.usernames.indexOf(user.username) !== -1) {
        removedUser = user;
        ChatMessage.insert({
          rid: rid,
          ts: new Date,
          t: 'ul',
          msg: removedUser.name,
          u: {
            _id: removedUser._id,
            username: removedUser.username
          }
        });
      }
      if ((room.u != null) && room.u._id === Meteor.userId()) {
        newOwner = _.without(room.usernames, user.username)[0];
        if (newOwner != null) {
          newOwner = Meteor.users.findOne({
            username: newOwner
          });
          if (newOwner != null) {
            if (update.$set == null) {
              update.$set = {};
            }
            update.$set['u._id'] = newOwner._id;
            update.$set['u.username'] = newOwner.username;
          }
        }
      }
      ChatSubscription.remove({
        rid: rid,
        'u._id': Meteor.userId()
      });
      ChatRoom.update(rid, update);
      return Meteor.defer(function() {
        return RocketChat.callbacks.run('afterLeaveRoom', user, room);
      });
    }
  });

}).call(this);
