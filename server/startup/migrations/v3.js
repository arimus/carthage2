// Generated by CoffeeScript 1.9.3
(function() {
  Meteor.startup(function() {
    return Migrations.add({
      version: 3,
      up: function() {
        try {
          ChatSubscription._dropIndex('uid_1');
        } catch (_error) {}
        try {
          ChatSubscription._dropIndex('rid_1_uid_1');
        } catch (_error) {}
        console.log('Fixing ChatSubscription uid');
        ChatSubscription.find({
          uid: {
            $exists: true
          }
        }, {
          nonreactive: true
        }).forEach(function(sub) {
          var update, user;
          update = {};
          user = Meteor.users.findOne(sub.uid, {
            fields: {
              username: 1
            }
          });
          if (user != null) {
            if (update.$set == null) {
              update.$set = {};
            }
            if (update.$unset == null) {
              update.$unset = {};
            }
            update.$set['u._id'] = user._id;
            update.$set['u.username'] = user.username;
            update.$unset.uid = 1;
          }
          if (Object.keys(update).length > 0) {
            return ChatSubscription.update(sub._id, update);
          }
        });
        console.log('Fixing ChatRoom uids');
        ChatRoom.find({
          'uids.0': {
            $exists: true
          }
        }, {
          nonreactive: true
        }).forEach(function(room) {
          var k, oldId, ref, ref1, update, user, usernames, users, v;
          update = {};
          users = Meteor.users.find({
            _id: {
              $in: room.uids
            },
            username: {
              $exists: true
            }
          }, {
            fields: {
              username: 1
            }
          });
          usernames = users.map(function(user) {
            return user.username;
          });
          if (update.$set == null) {
            update.$set = {};
          }
          if (update.$unset == null) {
            update.$unset = {};
          }
          update.$set.usernames = usernames;
          update.$unset.uids = 1;
          user = Meteor.users.findOne(room.uid, {
            fields: {
              username: 1
            }
          });
          if (user != null) {
            update.$set['u._id'] = user._id;
            update.$set['u.username'] = user.username;
            update.$unset.uid = 1;
          }
          if (room.t === 'd' && usernames.length === 2) {
            ref = update.$set;
            for (k in ref) {
              v = ref[k];
              room[k] = v;
            }
            ref1 = update.$unset;
            for (k in ref1) {
              v = ref1[k];
              delete room[k];
            }
            oldId = room._id;
            room._id = usernames.sort().join(',');
            ChatRoom.insert(room);
            ChatRoom.remove({
              _id: oldId
            });
            ChatSubscription.update({
              rid: oldId
            }, {
              $set: {
                rid: room._id
              }
            }, {
              multi: true
            });
            return ChatMessage.update({
              rid: oldId
            }, {
              $set: {
                rid: room._id
              }
            }, {
              multi: true
            });
          } else {
            return ChatRoom.update(room._id, update);
          }
        });
        console.log('Fixing ChatMessage uid');
        ChatMessage.find({
          uid: {
            $exists: true
          }
        }, {
          nonreactive: true
        }).forEach(function(message) {
          var update, user;
          update = {};
          user = Meteor.users.findOne(message.uid, {
            fields: {
              username: 1
            }
          });
          if (user != null) {
            if (update.$set == null) {
              update.$set = {};
            }
            if (update.$unset == null) {
              update.$unset = {};
            }
            update.$set['u._id'] = user._id;
            update.$set['u.username'] = user.username;
            update.$unset.uid = 1;
          }
          if (Object.keys(update).length > 0) {
            return ChatMessage.update(message._id, update);
          }
        });
        return console.log('End');
      }
    });
  });

}).call(this);
