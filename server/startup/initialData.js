// Generated by CoffeeScript 1.9.3
(function() {
  Meteor.startup(function() {
    return Meteor.defer(function() {
      var id, re;
      if (ChatRoom.findOne({
        'name': 'general'
      }) == null) {
        ChatRoom.insert({
          _id: 'GENERAL',
          usernames: [],
          ts: new Date(),
          t: 'c',
          name: 'general',
          msgs: 0
        });
      }
      if ((process.env.ADMIN_EMAIL != null) && (process.env.ADMIN_PASS != null)) {
        re = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
        if (re.test(process.env.ADMIN_EMAIL)) {
          if (Meteor.users.findOne({
            admin: true
          }) == null) {
            if (!Meteor.users.findOne({
              "emails.address": process.env.ADMIN_EMAIL
            })) {
              console.log('Inserting admin user'.red);
              console.log(("email: " + process.env.ADMIN_EMAIL + " | password: " + process.env.ADMIN_PASS).red);
              id = Meteor.users.insert({
                createdAt: new Date,
                emails: [
                  {
                    address: process.env.ADMIN_EMAIL,
                    verified: true
                  }
                ],
                name: 'Admin',
                avatarOrigin: 'none',
                admin: true
              });
              return Accounts.setPassword(id, process.env.ADMIN_PASS);
            } else {
              return console.log('E-mail exists; ignoring environment variables ADMIN_EMAIL and ADMIN_PASS'.red);
            }
          } else {
            return console.log('Admin user exists; ignoring environment variables ADMIN_EMAIL and ADMIN_PASS'.red);
          }
        } else {
          return console.log('E-mail provided is invalid; ignoring environment variables ADMIN_EMAIL and ADMIN_PASS'.red);
        }
      }
    });
  });

}).call(this);
